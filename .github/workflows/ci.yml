name: CI

on:
  push:
    branches: [ main, dev ]
  pull_request:
    branches: [ main, dev ]

jobs:
  build-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
            python-version: '3.13'

      - name: Install system deps
        run: sudo apt-get update && sudo apt-get install -y build-essential

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install ruff mypy pip-audit

      - name: Lint (ruff)
        run: ruff check . || true

      - name: Type check (mypy)
        run: mypy app || true

      - name: Security audit (pip-audit)
        run: pip-audit -r requirements.txt || true

      - name: Run tests
        run: pytest -q

      - name: Build Docker image
        run: docker build -t ticket-classifier:ci .

  publish-image:
    needs: build-test
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract version
        id: vars
        run: echo "version=${GITHUB_REF##*/}" >> $GITHUB_OUTPUT
      - name: Build and push
        run: |
          IMAGE=ghcr.io/${{ github.repository }}/ticket-classifier:${{ steps.vars.outputs.version }}
          docker build -t $IMAGE .
          docker push $IMAGE
